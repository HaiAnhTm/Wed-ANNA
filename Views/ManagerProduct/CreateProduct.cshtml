@model DotNet_E_Commerce_Glasses_Web.Models.Product

@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Views/Shared/_LayoutManager.cshtml";

}

<<<<<<< HEAD
@using (Html.BeginForm("CreateProduct", "ManagerProduct", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="Create_Product">
        <div class="Create_Product_head">Thêm sản phẩm mới</div>
        <div class="Create_Product_body">
            <div class="Create_Product_body_head">Thông tin cơ bản</div>
            <div class="Product_content">
                <div class="col l-3 Product_text">
                    <div class="Product_name">Hình ảnh sản phẩm</div>
                    <div class="Product_name">Tên sản phẩm</div>
                    <div class="Product_name">Mô tả sản phẩm</div>
                </div>
                <div class="col l-5 Product_input">
                    <input type="file" id="file-upload" name="file-upload" accept="image/*" class="file-input" />
                    <label for="file-upload" class="upload-label">
                        <div class="upload-icon">+</div>
                        Thêm hình ảnh
                    </label>
                    @Html.EditorFor(model => model.NameProduct, new { htmlAttributes = new { @class = "Product-name-input form-control", placeholder = "Nhập Tên Sản Phẩm" } })
                    @Html.ValidationMessageFor(model => model.NameProduct, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "Product-name-input_descripsion Product-name-input form-control", placeholder = "Mô Tả chi tiết sản phẩm" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
                <div class="col l-4">
                </div>
            </div>
        </div>
        <div class="Create_Product_body">
            <div class="Create_Product_body_head">Thông tin bán hàng</div>
            <div class="Product_content">
                <div class="col l-3 Product_text">
                    <div class="Product_name">Tên Loại Hàng</div>
                    <div class="Product_name">Giá</div>
                    <div class="Product_name">Kho hàng</div>
                    <div class="Product_name">Giảm giá</div>
                    <div class="Product_name">Trạng thái</div>
                </div>
                <div class="col l-5 Discount_input">
                    <input class="Product-name-input" type="text" placeholder="Nhập vào">
                    <input class="Product-name-input" type="text" placeholder="đ | 0">
                    <input class="Product-name-input" type="text" placeholder="0">
                    <input class="Product-name-input" type="text" placeholder="%">
                    <select class="Product-name-input" aria-label=".form-select-sm example" id="fillter_selected">
                        <option value=0 selected>Bán Hàng</option>
                        <option value="1">Không Bán</option>
                    </select>
                </div>
                <div class="col l-4">
                </div>
            </div>
        </div>
    </div>
    <div class="Product_confirm">
        <button class="btn_cancel ">Hủy</button>
        <button class="btn_confirm btn_confirm_product">Lưu & Hiển Thị</button>
    </div>
}





<h2>Thêm mới sản phẩm</h2>

@using (Html.BeginForm("CreateProduct", "ManagerProduct", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.NameProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTypeProduct, "IdTypeProduct", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdTypeProduct", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTypeProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTypeSale, "IdTypeSale", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdTypeSale", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTypeSale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="HinhAnh">Hình Ảnh</label>
            <input type="file" class="form-control" accept="image/*" name="ImageFile" />
            @Html.ValidationMessage("ImageFile", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
=======
@using (Html.BeginForm("CreateProduct", "ManagerProduct", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="Create_Product">
        <div class="Create_Product_head">Thêm sản phẩm mới</div>
        <div class="Create_Product_body">
            <div class="Create_Product_body_head">Thông tin cơ bản</div>
            <div class="Product_content">
                <div class="col l-3 Product_text">
                    <div class="Product_name">Hình ảnh sản phẩm</div>
                    <div class="Product_name">Tên sản phẩm</div>
                    <div class="Product_name">Mô tả sản phẩm</div>
                </div>
                <div class="col l-5 Product_input">
                    <input type="file" id="file-upload" name="ImageFile" accept="image/*" class="file-input" />
                    <label for="file-upload" class="upload-label">
                        <div id="upload-placeholder" class="upload-icon">
                            <span>+</span>
                            <span>Thêm hình ảnh</span>
                        </div>
                        <img id="image-preview" src="#" alt="Image Preview" style="display: none;" />
                    </label>


                    @Html.ValidationMessage("ImageFile", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.NameProduct, new { htmlAttributes = new { @class = "Product-name-input", placeholder = "Nhập Tên Sản Phẩm" } })
                    @Html.ValidationMessageFor(model => model.NameProduct, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "Product-name-input_descripsion Product-name-input", placeholder = "Mô Tả chi tiết sản phẩm" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
                <div class="col l-4">
                </div>
            </div>
        </div>
        <div class="Create_Product_body">
            <div class="Create_Product_body_head">Thông tin bán hàng</div>
            <div class="Product_content">
                <div class="col l-3 Product_text">
                    <div class="Product_name">Tên Loại Hàng</div>
                    <div class="Product_name">Giá</div>
                    <div class="Product_name">Kho hàng</div>
                    <div class="Product_name">Giảm giá</div>
                    <div class="Product_name">Trạng thái</div>
                </div>
                <div class="col l-5 Discount_input">
                    @Html.DropDownListFor(model => model.IdTypeProduct, ViewBag.IdTypeProduct as SelectList, new { @class = "Product-name-input" })
                    @Html.ValidationMessageFor(model => model.IdTypeProduct, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "Product-name-input", placeholder = "Nhập Giá" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "Product-name-input", placeholder = "Nhập Số Lượng" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "Product-name-input", placeholder = "Nhập Giảm Giá (%)" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })

                    @Html.DropDownListFor(model => model.IdTypeSale, ViewBag.IdTypeSale as SelectList, new { @class = "Product-name-input" })
                    @Html.ValidationMessageFor(model => model.IdTypeSale, "", new { @class = "text-danger" })
                </div>
                <div class="col l-4">
                </div>
            </div>
        </div>
    </div>
    <div class="Product_confirm">
        <a href="@Url.Action("Index", "ManagerProduct")" class="btn_cancel ">Hủy</a>
        <button type="submit" value="Create" class="btn_confirm btn_confirm_product">Lưu & Hiển Thị</button>
    </div>
>>>>>>> ef899ba375adf76d5e3d174f4f10ad61110d8d46
}





@*<h2>Thêm mới sản phẩm</h2>

    @using (Html.BeginForm("CreateProduct", "ManagerProduct", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.NameProduct, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NameProduct, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NameProduct, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdTypeProduct, "IdTypeProduct", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdTypeProduct", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdTypeProduct, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdTypeSale, "IdTypeSale", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdTypeSale", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdTypeSale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label for="HinhAnh">Hình Ảnh</label>
                <input type="file" class="form-control" accept="image/*" name="ImageFile" />
                @Html.ValidationMessage("ImageFile", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#file-upload').change(function () {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#image-preview').attr('src', e.target.result);
                    $('#image-preview').show();
                    $('#upload-placeholder').hide(); // Ẩn dấu + và chữ
                }
                reader.readAsDataURL(this.files[0]);
            });
        });
    </script>


    @Scripts.Render("~/bundles/jqueryval")
}

@model IEnumerable<DotNet_E_Commerce_Glasses_Web.Models.Product>

@{
    ViewBag.Title = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_LayoutManager.cshtml";
}

<link rel="stylesheet" href="~/Assets/css/manager/ManagerProduct.css" />

<div class="container-fluid" style="background-color:#fff">
    <div class="row">
        <div class="content-product-header">
            <input type="radio" id="radio-all" name="discount-type" class="content-discount-radio" hidden checked>
            <label for="radio-all" class="content-discount-header-text header-text-active">Tất Cả</label>

            <input type="radio" id="radio-active" name="discount-type" class="content-discount-radio" hidden>
            <label for="radio-active" class="content-discount-header-text">Đang Hoạt Động</label>

            <input type="radio" id="radio-out-of-stock" name="discount-type" class="content-discount-radio" hidden>
            <label for="radio-out-of-stock" class="content-discount-header-text">Hết Hàng</label>

            <input type="radio" id="radio-not-selling" name="discount-type" class="content-discount-radio" hidden>
            <label for="radio-not-selling" class="content-discount-header-text">Không Bán</label>
        </div>
    </div>

    <div class="row">
        <div class="content-product-body">
            <div class="content-product-body-header">
                <div class="body-products-available">
                    <div class="number-of-products-available" id="number_products">0 Sản Phẩm</div>
                </div>

                <div class="form_select_arrangeAndAdd">
                    <div class="form_select_arrage_text">Sắp Xếp: </div>
                    <select class="form_select_arrange" id="fillter_selected">
                        <option value=0 selected>Mặc đinh</option>
                        <option value="1">Theo tên sản phẩm</option>
                        <option value="2">Theo số lượng</option>
                        <option value="3">Theo giá</option>
                    </select>

                    <a href="/ManagerProduct/CreateProduct" class="btn btn_add_product">+ Thêm Mới 1 Sản Phẩm</a>"
                </div>

            </div>
        </div>
    </div>

    <div class="content-product content-product-detail">
        
            <div class="row product-detail-header">
                <!-- Tên Sản Phẩm -->
                <div class="col-md-3 header-text-product">
                    <div class="header-check-text header-check-text-firt">Tên Sản Phẩm</div>
                </div>

                <!-- Mô tả -->
                <div class="col-md-2 header-check-tile">
                    <div class="header-check-text">Mô tả</div>
                </div>

                <!-- Đơn Giá -->
                <div class="col-md-2 header-check-tile" style="width: calc(16.66666667% - 15px);">
                    <div class="header-check-text">Đơn Giá</div>
                </div>

                <!-- Giảm giá -->
                <div class="col-md-1 header-check-tile">
                    <div class="header-check-text">Giảm giá</div>
                </div>

                <!-- Số Lượng -->
                <div class="col-md-1 header-check-tile">
                    <div class="header-check-text">Số Lượng</div>
                </div>

                <!-- Loại -->
                <div class="col-md-1 header-check-tile">
                    <div class="header-check-text">Loại</div>
                </div>

                <!-- Trạng Thái -->
                <div class="col-md-1 header-check-tile">
                    <div class="header-check-text">Trạng Thái</div>
                </div>

                <!-- Thao Tác -->
                <div class="col-md-1 header-check-tile header-check-text-last">
                    <div class="header-check-text">Thao Tác</div>
                </div>
            </div>
        


        <div id="content-product-list">

        </div>

    </div>
</div>


@*Dialog Confirm Action Delete*@
<div class="modal" id="dialog_confirm">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body">
                <h6>Xác nhận xóa sản phẩm</h6>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger rounded-pill" id="button_delete">Xóa</button>
            </div>
        </div>
    </div>
</div>


@section Scripts  {
    <script>
        var sortIndex = 0
        var statusIndex = 0

        initialize()
        handleEventChangeTab()
        handleEventFilter()

        function initialize ()
        {
            loadProducts(
                sort = sortIndex,
                statusProduct = statusIndex,
                onSuccess = function ( data )
                {
                    console.log( data )
                    showProducts( data )
                },
                onFailure = function ()
                {

                }
            )
        }        

        function handleEventFilter ()
        {
            const filterSelectedId = document.getElementById( 'fillter_selected' );
         
            filterSelectedId.addEventListener( 'change', function ( event )
            {
                sortIndex = this.value;
                loadProducts(
                    sort = sortIndex,
                    statusProduct = statusIndex,
                    onSuccess = function ( data )
                    {
                        console.log( data )
                        showProducts( data )
                    },
                    onFailure = function ()
                    {

                    }
                )
            });
        }

        function handleEventChangeTab ()
        {
            const radios = document.querySelectorAll( '.content-discount-radio' );

            radios.forEach( ( radio, index ) =>
            {
                radio.addEventListener( 'click', () =>
                {
                    statusIndex = index
                    loadProducts(
                        sort = sortIndex,
                        statusProduct = statusIndex,
                        onSuccess = function (data)
                        {
                            console.log( data )
                            showProducts(data)
                        },
                        onFailure = function ()
                        {
                            // ToDo: Handle event load data failure
                        }
                    )

                    const labels = document.querySelectorAll( '.content-discount-header-text' );
                    labels.forEach( ( label, labelIndex ) =>
                    {
                        if ( labelIndex === index )
                        {
                            label.classList.add( 'header-text-active' );
                        } else
                        {
                            label.classList.remove( 'header-text-active' );
                        }
                    });
                });
            });
        }

        async function loadProducts (
            sort = sortIndex,
            statusProduct = statusIndex,
            onSuccess,
            onFailure
        )
        {
            $.ajax( {
                url: "/ManagerProduct/QueryProduct",
                type: "GET",
                data: {
                    sort: sort,
                    statusProduct: statusProduct,
                },
                success: function ( data )
                {
                    if ( data.status )
                        onSuccess( data.data )
                    else
                    {
                        location.href = data.url
                    }
                },
                error: function ( error )
                {
                    console.log('Error: ', error)
                    onFailure()
                },
            } );
        }

        function showProducts ( products )
        {
            var numberProduct = document.getElementById( 'number_products' );
            numberProduct.textContent = `Có ${ products.length } sản phẩm`;

            var productDetailId = document.getElementById( 'content-product-list' );

            productDetailId.innerHTML = "";

            products.forEach( ( item ) =>
            {
                var htmlContent = `
  <div class="adProduct-content-body">
    <!-- Tên và Hình Ảnh Sản Phẩm -->
    <div class="col-md-3 content-body-name">
      <img class="adProduct-body-product-img" src="${item.image_url}" alt="">
      <div class="adProduct-product-name">${item.name_product}</div>
    </div>
    
    <!-- Mô tả -->
    <div class="col-md-2 adProduct-product">
      <div class="adProduct-product-manucafer" style="overflow: hidden;
                                                       display: -webkit-box;
                                                       -webkit-line-clamp: 3;
                                                       -webkit-box-orient: vertical;
                                                       text-overflow: ellipsis;
                                                       height: 4.5em;
                                                       line-height: 1.5em;">${item.description}</div>
    </div>

    <!-- Đơn Giá -->
    <div class="col-md-2 adProduct-product-unitprice adProduct-product">
      <div class="adProduct-product-manucafer" style="margin-left:10px;">₫${item.price}</div>
    </div>

    <!-- Giảm Giá -->
    <div class="col-md-1 adProduct-product-unitprice adProduct-product">
      <div class="adProduct-product-manucafer">${item.discount_product}%</div>
    </div>

    <!-- Số Lượng -->
    <div class="col-md-1 adProduct-product-unitprice adProduct-product">
      <div class="adProduct-product-manucafer">${item.quantity}</div>
    </div>

    <!-- Loại Sản Phẩm -->
    <div class="col-md-1 adProduct-product-quantity adProduct-product">
      <div class="adProduct-product-manucafer product-quantity">${item.type_product}</div>
    </div>

    <!-- Trạng Thái Sản Phẩm -->
    <div class="col-md-1 adProduct-product">
      <div class="adProduct-product-manucafer">${item.status_product}</div>
    </div>

    <!-- Thao Tác -->
    <div class="col-md-1 adProduct-product">
      <a href="/ManagerProduct/UpdateProduct/${item.id_product}" class="product-Update-operation icon-update">Cập nhật</a>
      <div class="product-Update-operation" id="iconDelete" onclick="showDeleteDiaLogConfirm('${item.id_product}')">Xóa</div>
    </div>
  </div>

               `;
                productDetailId.insertAdjacentHTML( 'beforeend', htmlContent );
            } );
        }

        const dialogConfirmId = document.getElementById( 'dialog_confirm' );
        const buttonConfirmId = document.getElementById( 'button_delete' )

        function hideDialogConfirm ()
        {
            $( dialogConfirmId ).modal( 'hide' );
        }

        function showDeleteDiaLogConfirm ( IdProduct )
        {
            $( dialogConfirmId ).modal( 'show' );

            buttonConfirmId.addEventListener( 'click', function ()
            {
                $.ajax( {
                    url: '/ManagerProduct/DeleteProduct',
                    type: 'POST',
                    data: { IdProduct: IdProduct },
                    success: function ( data )
                    {
                        if ( data )
                        {
                            hideDialogConfirm()
                            location.reload();
                        } else
                        {
                            console.error( "Update failed." );
                        }
                    },
                    error: function ( error )
                    {
                        console.log( "Error: ", error );
                    }
                } );
            } )
            buttonConfirmId.removeEventListener( 'click' )
        }


    </script>

    <script>
        //document.addEventListener( "DOMContentLoaded", function ()
        //{
        //    // đổi lại placehoder khi được select
        //    var selectElement = document.getElementById( "find_product_select" );
        //    var inputElement = document.getElementById( "productNameInput" );

        //    selectElement.addEventListener( "change", function ()
        //    {
        //        if ( selectElement.value === "0" )
        //        {
        //            inputElement.placeholder = "Nhập Tên Sản Phẩm";
        //        } else if ( selectElement.value === "1" )
        //        {
        //            inputElement.placeholder = "Nhập Mã Sản Phẩm";
        //        }
        //    } );
        //    // reset button
        //    var resetButton = document.getElementById( "resetButton" );

        //    resetButton.addEventListener( "click", function ()
        //    {
        //        var inputs = document.querySelectorAll( '.find-product-name-input' );
        //        inputs.forEach( function ( input )
        //        {
        //            input.value = '';
        //        } );
        //    } );
        //} );

        //// Hàm để cập nhật số lượng sản phẩm đã được chọn trong footer
        //function updateSelectedProductCount ()
        //{
        //    var selectedCount = document.querySelectorAll( '.content-body-name-checkbox:checked' ).length;
        //    var footerText = document.querySelector( '.footer-chose-right-text' );
        //    footerText.textContent = selectedCount + " sản phẩm đã được chọn";
        //}

        //// Hàm để kiểm tra xem tất cả các checkbox đã được chọn hay chưa
        //function checkAllSelected ()
        //{
        //    var checkboxes = document.querySelectorAll( '.content-body-name-checkbox' );
        //    for ( var i = 0; i < checkboxes.length; i++ )
        //    {
        //        if ( !checkboxes[ i ].checked )
        //        {
        //            return false;
        //        }
        //    }
        //    return true;
        //}

        //// Hàm để kiểm tra xem có bất kỳ checkbox nào được chọn không
        //function checkAnySelected ()
        //{
        //    var checkboxes = document.querySelectorAll( '.content-body-name-checkbox' );
        //    for ( var i = 0; i < checkboxes.length; i++ )
        //    {
        //        if ( checkboxes[ i ].checked )
        //        {
        //            return true;
        //        }
        //    }
        //    return false;
        //}

        //// Hàm để hiển thị hoặc ẩn phần footer
        //function toggleFooter ()
        //{
        //    var footer = document.querySelector( '.footer-chose' );
        //    var footerCheckbox = document.querySelector( '.footer-chose-left-checkbox' );
        //    if ( checkAnySelected() )
        //    {
        //        footer.style.display = 'flex';
        //        footerCheckbox.checked = checkAllSelected();
        //    } else
        //    {
        //        footer.style.display = 'none';
        //        footerCheckbox.checked = false;
        //    }
        //}

        //// Hàm để cập nhật trạng thái checkbox header
        //function updateHeaderCheckbox ()
        //{
        //    var headerCheckbox = document.querySelector( '.header-text-product input[type="checkbox"]' );
        //    headerCheckbox.checked = checkAllSelected();
        //}

        //// Lắng nghe sự kiện click trên các checkbox và tiêu đề sản phẩm
        //var checkboxes = document.querySelectorAll( '.content-body-name-checkbox' );
        //for ( var i = 0; i < checkboxes.length; i++ )
        //{
        //    checkboxes[ i ].addEventListener( 'click', function ()
        //    {
        //        toggleFooter();
        //        updateHeaderCheckbox();
        //        updateSelectedProductCount();
        //    } );
        //}
        //// Lắng nghe sự kiện click trên checkbox footer để chọn tất cả hoặc bỏ chọn tất cả
        //var footerCheckbox = document.querySelector( '.footer-chose-left-checkbox' );
        //footerCheckbox.addEventListener( 'click', function ()
        //{
        //    var checkboxes = document.querySelectorAll( '.content-body-name-checkbox' );
        //    for ( var i = 0; i < checkboxes.length; i++ )
        //    {
        //        checkboxes[ i ].checked = footerCheckbox.checked;
        //    }
        //    toggleFooter();
        //    updateHeaderCheckbox();
        //    updateSelectedProductCount();
        //} );

        //// Lắng nghe sự kiện click trên checkbox header để chọn tất cả hoặc bỏ chọn tất cả
        //var headerCheckbox = document.querySelector( '.header-text-product input[type="checkbox"]' );
        //headerCheckbox.addEventListener( 'click', function ()
        //{
        //    var checkboxes = document.querySelectorAll( '.content-body-name-checkbox' );
        //    for ( var i = 0; i < checkboxes.length; i++ )
        //    {
        //        checkboxes[ i ].checked = headerCheckbox.checked;
        //    }
        //    toggleFooter();
        //    updateSelectedProductCount();
        //} );
    </script>
}
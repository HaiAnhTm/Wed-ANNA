﻿@model DotNet_E_Commerce_Glasses_Web.Models.Bill
@{
    ViewBag.Title = "Giỏ hàng";
    Layout = ViewBag.Consumer != null ? "~/Views/Shared/_LayoutConsumer.cshtml" : "~/Views/Shared/_Layout.cshtml";
}


<div class="consumer_header_product">
    <div class="consumer_header_img_text">
        <div class="consumer_header_img_heading">GIỎ HÀNG</div>
        <div class="consumer_header_img_content">
            <a href="" class="consumer_header_img_1">Trang chủ</a>
            <div class="consumer_header_img_node"></div>
            <div class="consumer_header_img_1">Giỏ hàng</div>
        </div>
    </div>
</div>

<div class="cart_body">
    <div class="grid wide">
        <div class="cart_header_body">Sản phẩm</div>
        <div class="cart_content">
            <div class="col l-9">
                <div class="cart_content_product">
                    <div class="cart_content_header">
                        <div class="col l-5 cart_content_header_fisrt">
                            <input type="checkbox" class="cart_content_input">
                            <div class="content_header_text">Thông tin sản phẩm</div>
                        </div>
                        <div class="col l-1">
                            <div class="content_header_text">Giá</div>
                        </div>
                        <div class="col l-2">
                            <div class="content_header_text">Số lượng</div>
                        </div>
                        <div class="col l-2">
                            <div class="content_header_text">Còn lại</div>
                        </div>
                        <div class="col l-2">
                            <div class="content_header_text">Tổng cộng</div>
                        </div>
                    </div>
                    <div class="cart_content_body">
                        @foreach (var item in (IEnumerable<DotNet_E_Commerce_Glasses_Web.Models.ProductSaleModel>)ViewBag.ListCart)
                        {
                            <div class="col l-5 cart_content_name">
                                <input type="checkbox" class="cart_content_input">
                                <img src="@item.Image" alt="" class="cart_content_body_img">
                                <div class="content_body_text">
                                    <div class="content_body_textheader">
                                        @item.NameProduct
                                    </div>
                                </div>
                            </div>
                            <div class="col l-1 content_body_text">
                                @*TODO: cần giá sau khi giảm có vẻ đây là giá gốc*@
                                <div class="content_body_text-1">@item.Price đ</div>
                            </div>
                            <div class="col l-2 content_body_text">
                                <div class="cart_quantity-selector">
                                    <div class="cart_quantity-selector_left">
                                        <button class="cart_minus-btn" onclick="updateListCart(`@item.IdProduct`, `-1`)">-</button>
                                        <input type="text" value="1" min="1" class="cart_quantity-input"
                                               inputmode="numeric" pattern="[0-9]*"
                                               onkeypress='return event.charCode >= 48 && event.charCode <= 57' value="@item.QuanitySale" disabled>
                                        <button class="cart_plus-btn" onclick="updateListCart(`@item.IdProduct`, `1`)">+</button>
                                    </div>
                                </div>
                            </div>
                            <div class="col l-2 content_body_text">
                                @*TODO:Sản phẩm còn lại trong kho và lấy số sản phẩm này là số tối đa có thể bấm hoặc nhập vào thẻ input số lượng*@
                                <div class="content_body_text-1">@Model.Quantity Sản Phẩm</div>
                            </div>
                            <div class="col l-2 content_body_text">
                                @*TODO: Tổng số tiền tương ứng với số sản phẩm*@
                                <div class="content_body_text-1">@item.getTotalProduct() đ</div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col l-3">
                <div class="cart_content_bill">
                    <div class="cart_bill_header">Tóm tắt đơn hàng</div>
                    <div class="cart_bill_body">
                        <div class="cart_bill_body_content">
                            <div class="bill_body_text">Tạm tính</div>
                            <div class="bill_body_text">@Model.currencyTotalBill() đ</div>
                        </div>
                        <div class="cart_bill_body_content">
                            <div class="bill_body_text">Tổng</div>
                            <div class="bill_body_text">@Model.currencyTotalBill() đ</div>
                        </div>
                    </div>
                    @*UI: Đi đến trang thanh toán*@
                    <div class="cart_bill_btn btn">Thanh toán ngay</div>
                </div>
            </div>
        </div>
        <div class="btn_cart">
            @*TODO: làm sao để khi check vào sản phẩm thì xóa được sản phẩm đó đây Chính ơi*@
            <div class="btn btn_cart_delete" @*onclick="deleteProduct(`@item.IdProduct`)"*@>Xóa sản phẩm đã chọn</div>
            @*UI: đi đến trang sản phẩm để tiếp tục mua*@
            <div class="btn btn_cart_continue">Tiếp tục mua hàng</div>
        </div>
    </div>
</div>
<div class="grid wide">
    <div class="body_best_seller_product">
        <div class="seller_product_title">SẢN PHẨM CÓ THỂ BẠN QUAN TÂM</div>
        @*TODO: truy vấn 4 sản phẩm đầu tiên hoặc được bán nhiều nhất trong csdl*@
        <div class="seller_product_list">
            @foreach (var item in Model)
            {
                if (item.TypeProductSale.StatusProduct.Equals("Bán hàng"))
                {
                    <div class="col l-3">
                        <div class="best_seller_product-card" data-item-id="@item.IdProduct">
                            <div class="best_seller_product-image">
                                <img src="@item.Image" alt="Gọng kính">
                            </div>
                            <div class="best_seller_product-details">
                                <div class="best_seller_product-name">@item.NameProduct</div>
                                <div class="best_seller_product-pricing">
                                    <div class="best_seller_product-discount">
                                        Tiết kiệm được <span class="best_seller_product-discount-price">150.000đ</span>
                                    </div>
                                    <div class="best_seller_product-original-price">@item.Price</div>
                                </div>
                                <button class="best_seller_product-buy-btn">
                                    <div class="best_seller_product-price">@item.CurrencyString()</div>
                                    <i class="fas fa-chevron-right"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>





@*code cũ của Chính*@
<h3>Giỏ hàng</h3>
<div class="container">
    <div class="row h-75">
        <div class="col-sm-9">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th scope="col">Hình Ảnh</th>
                        <th scope="col"></th>
                        <th scope="col">Số lượng</th>
                        <th scope="col">Thành tiền</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in (IEnumerable<DotNet_E_Commerce_Glasses_Web.Models.ProductSaleModel>)ViewBag.ListCart)
                    {
                        <tr>
                            <td style="max-width: 180px;">
                                <img src="@item.Image" alt="Image Description" style="width: 120px;" />
                            </td>
                            <td>
                                <h5 style="width:300px;height:90px;">@item.NameProduct</h5>
                                <h7>@item.Price/1 chiếc</h7>
                            </td>
                            <td>
                                <div class="row">
                                    <button type="button" class="btn btn-outline-secondary d-flex justify-content-center align-items-center rounded-circle" style="max-width: 30px;" onclick="updateListCart(`@item.IdProduct`, `-1`)">
                                        <i class="fa-solid fa-minus"></i>
                                    </button>
                                    <input type="number" class="col rounded text-center" style="max-width: 100px;" value="@item.QuanitySale" disabled>
                                    <button type="button" class="btn btn-outline-secondary d-flex justify-content-center align-items-center rounded-circle" style="max-width: 30px;" onclick="updateListCart(`@item.IdProduct`, `1`)">
                                        <i class="fa-solid fa-plus"></i>
                                    </button>
                                </div>
                            </td>
                            <td>
                                <p>@item.getTotalProduct()</p>
                            </td>
                            <td>
                                <button type="button" class="btn btn-outline-danger d-flex justify-content-center align-items-center rounded-circle" style="max-width: 30px;" onclick="deleteProduct(`@item.IdProduct`)">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="row">
                <strong class="col">
                    Mã giảm giá
                </strong>
                <div class="col">
                    <input type="text" name="GiamGia" class="rounded" id="input-code">
                    <span id="notify_GiamGia"></span>
                    <button type="button" class="btn btn-outline-secondary rounded-pill" onclick="appDiscount()">
                        Áp dụng
                    </button>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="d-flex flex-column justify-content-between align-items-center rounded" style="background-color: white">
                <h3>Thanh toán</h3>
                <div class="container">
                    <div class="row">
                        <div class="col fw-bold">
                            Tổng hóa đơn:
                        </div>
                        <div class="col">
                            @Model.currencyTotalBill()
                        </div>
                    </div>
                    <div class="row">
                        <div class="col fw-bold">
                            Giảm giá:
                        </div>
                        <div class="col">
                            @((Model.Discount != null ? Model.Discount.PercentValue : 0) + " %")
                        </div>
                    </div>

                    <div class="row">
                        <div class="col fw-bold">
                            Số sản phẩm:
                        </div>
                        <div class="col">
                            @ViewBag.ListCart.Count
                        </div>
                    </div>
                    <div class="table-group-divider"></div>
                    <div class="row mt-4">
                        <div class="col fw-bold">
                            Thanh toán:
                        </div>
                        <div class="col fw-bold">
                            @Model.currencyTotalPay()
                        </div>
                    </div>
                </div>
                <div style="margin-top:20px ; margin-bottom:30px;">
                    <button type="button" class="btn btn-outline-secondary rounded-pill" onclick="actionCancelBill()">Hủy</button>
                    <button type="button" class="btn btn-danger rounded-pill" onclick="actionPayBill()">Thanh toán</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts  {
    <script src="~/Assets/scripts/ForConsumer/ConsumerCart.js"></script>
    <script>
        // quantity buttons
        document.addEventListener('DOMContentLoaded', function () {
            const minusBtns = document.querySelectorAll('.cart_minus-btn'); // Tất cả nút giảm
            const plusBtns = document.querySelectorAll('.cart_plus-btn'); // Tất cả nút tăng
            const quantityInputs = document.querySelectorAll('.cart_quantity-input'); // Tất cả input số lượng

            // Xử lý cho nút giảm
            minusBtns.forEach(function (btn) {
                btn.addEventListener('click', function () {
                    let parent = this.closest('.cart_content_body');
                    let quantityInput = parent.querySelector('.cart_quantity-input');
                    let currentValue = parseInt(quantityInput.value);
                    if (currentValue > 1) {
                        quantityInput.value = currentValue - 1;
                    }
                });
            });

            // Xử lý cho nút tăng
            plusBtns.forEach(function (btn) {
                btn.addEventListener('click', function () {
                    let parent = this.closest('.cart_content_body');
                    let quantityInput = parent.querySelector('.cart_quantity-input');
                    let currentValue = parseInt(quantityInput.value);
                    quantityInput.value = currentValue + 1;
                });
            });

            // Xử lý khi người dùng rời khỏi input
            quantityInputs.forEach(function (input) {
                input.addEventListener('blur', function () {
                    if (input.value === '') {
                        input.value = 1;
                    }
                });
            });
        });
        // check box
        document.addEventListener('DOMContentLoaded', function () {
            const headerCheckboxes = document.querySelectorAll('.cart_content_header .cart_content_input'); // Tất cả các checkbox trong header
            const contentCheckboxes = document.querySelectorAll('.cart_content_body .cart_content_input'); // Tất cả các checkbox trong body

            // Xử lý cho nút checkbox trong header
            headerCheckboxes.forEach(function (checkbox) {
                checkbox.addEventListener('change', function () {
                    // Lấy trạng thái checked của checkbox
                    const isChecked = this.checked;

                    // Duyệt qua tất cả các checkbox trong body và thiết lập trạng thái checked của chúng
                    contentCheckboxes.forEach(function (contentCheckbox) {
                        contentCheckbox.checked = isChecked;
                    });
                });
            });
        });
    </script>
}
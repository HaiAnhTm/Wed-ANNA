﻿@model DotNet_E_Commerce_Glasses_Web.Models.Bill
@{
    ViewBag.Title = "Giỏ hàng";
    Layout = ViewBag.Consumer != null ? "~/Views/Shared/_LayoutConsumer.cshtml" : "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        margin: -15px 0;
    }
    .consumer_header_img_content{
        display:flex;
        align-items:center;
    }
    .consumer_header_img_cart {
        font-size: 5rem;
        color: var(--primary-color);
        margin: -8px 10px 0 10px;
    }
</style>

<div class="consumer_header_product" style="background-image: url('/Assets/images/img/bg-banner-about-us.jpeg');">
    <div class="consumer_header_img_text">
        <div class="consumer_header_img_heading">GIỎ HÀNG</div>
        <div class="consumer_header_img_content">
            <a href="" class="consumer_header_img_1">Trang chủ</a>
            <div class="consumer_header_img_cart">•</div>
            <div class="consumer_header_img_1">Giỏ hàng</div>
        </div>
    </div>
</div>

<div class="cart_body">
    <div class="grid wide">
        <div class="cart_header_body">Sản phẩm</div>
        <div class="cart_content">
            <div class="col l-9">
                <div class="cart_content_product">
                    <div class="cart_content_header">
                        <div class="col l-5 cart_content_header_fisrt">
                            @*<input type="checkbox" class="cart_content_input" id="select_all" onchange="selectAllCheckboxes(this.checked);">*@
                            <div class="content_header_text">Thông tin sản phẩm</div>
                        </div>
                        <div class="col l-1">
                            <div class="content_header_text">Giá</div>
                        </div>
                        <div class="col l-2">
                            <div class="content_header_text">Số lượng</div>
                        </div>
                        <div class="col l-2">
                            <div class="content_header_text">Còn lại</div>
                        </div>
                        <div class="col l-2">
                            <div class="content_header_text">Tổng cộng</div>
                        </div>
                    </div>
                @foreach (var item in (IEnumerable<DotNet_E_Commerce_Glasses_Web.Models.ProductSaleModel>)ViewBag.ListCart)
                {
                    <div class="cart_content_body">
                            <div class="col l-5 cart_content_name">
                                <input type="checkbox" class="cart_content_input" data-product-id="@item.IdProduct">
                                <img src="@item.Image" alt="" class="cart_content_body_img">
                                <div class="content_body_text">
                                    <div class="content_body_textheader">
                                        @item.NameProduct
                                    </div>
                                </div>
                            </div>
                            <div class="col l-1 content_body_text">
                                <div class="content_body_text-1">@item.CurrencyString2()</div>
                            </div>
                            <div class="col l-2 content_body_text">
                                <div class="cart_quantity-selector">
                                    <div class="cart_quantity-selector_left">
                                        <button type="button" class="cart_minus-btn" onclick="updateListCart(`@item.IdProduct`, `-1`)">-</button>
                                        <input type="text" min="1" class="cart_quantity-input" inputmode="numeric" pattern="[0-9]*" onkeypress='return event.charCode >= 48 && event.charCode <= 57' value="@item.QuanitySale">
                                        <button type="button" class="cart_plus-btn"  onclick="updateListCart(`@item.IdProduct`, `1`)">+</button>
                                    </div>
                                </div>
                            </div>
                            <div class="col l-2 content_body_text">
                                <div class="content_body_text-1">@item.Quantity Sản Phẩm</div>
                            </div>
                            <div class="col l-2 content_body_text">
                                <div class="content_body_text-1">@item.getTotalProduct()</div>
                            </div>
                        </div>
                }
                </div>
            </div>
            <div class="col l-3">
                <div class="cart_content_bill">
                    <div class="cart_bill_header">Tóm tắt đơn hàng</div>
                    <div class="cart_bill_body">
                        <div class="cart_bill_body_content">
                            <div class="bill_body_text">Tạm tính</div>
                            <div class="bill_body_text">@Model.currencyTotalBill()</div>
                        </div>
                        <div class="cart_bill_body_content">
                            <div class="bill_body_text">Tổng</div>
                            <div class="bill_body_text">@Model.currencyTotalBill()</div>
                        </div>
                    </div>
                    <a href="@Url.Action("Payment", "ConsumerProduct")" class="cart_bill_btn btn">Thanh toán ngay</a>
                </div>
            </div>
        </div>
        @*<div class="btn_cart">
            <div class="btn btn_cart_delete" onclick="deleteSelectedProducts()">Xóa sản phẩm đã chọn</div>
            <a href="@Url.Action("Index", "ConsumerProduct")" class="btn btn_cart_continue">Tiếp tục mua hàng</a>
        </div>*@
    </div>
</div>

@*<div class="container-xxl">
    <div class="row h-75">
        <div class="col-sm-9">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th scope="col">Hình Ảnh</th>
                        <th scope="col"></th>
                        <th scope="col">Số lượng</th>
                        <th scope="col">Thành tiền</th>
                        <th scope="col"></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in (IEnumerable<DotNet_E_Commerce_Glasses_Web.Models.ProductSaleModel>)ViewBag.ListCart)
                    {
                        <tr>
                            <td style="max-width: 180px;">
                                <img src="@item.Image" alt="Image Description" style="width: 120px;" />
                            </td>
                            <td>
                                <h5 style="width:300px;height:90px;">@item.NameProduct</h5>
                                <h7>@item.Price/1 chiếc</h7>
                            </td>
                            <td>
                                <div class="row">
                                    <button type="button" class="btn btn-outline-secondary d-flex justify-content-center align-items-center rounded-circle" style="max-width: 30px;" onclick="updateListCart(`@item.IdProduct`, `-1`)">
                                        <i class="fa-solid fa-minus"></i>
                                    </button>
                                    <input type="number" class="col rounded text-center" style="max-width: 100px;" value="@item.QuanitySale" disabled>
                                    <button type="button" class="btn btn-outline-secondary d-flex justify-content-center align-items-center rounded-circle" style="max-width: 30px;" onclick="updateListCart(`@item.IdProduct`, `1`)">
                                        <i class="fa-solid fa-plus"></i>
                                    </button>
                                </div>
                            </td>
                            <td>
                                <p>@item.getTotalProduct()</p>
                            </td>
                            <td>
                                <button type="button" class="btn btn-outline-danger d-flex justify-content-center align-items-center rounded-circle" style="max-width: 30px;" onclick="deleteProduct(`@item.IdProduct`)">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
        <div class="col-sm-3">
            <div class="d-flex flex-column justify-content-between align-items-center rounded" style="background-color: white">
                <h3>Thanh toán</h3>
                <div class="container">
                    <div class="row">
                        <div class="col fw-bold">
                            Tổng hóa đơn:
                        </div>
                        <div class="col">
                            @Model.currencyTotalBill()
                        </div>
                    </div>
                    <div class="row">
                        <div class="col fw-bold">
                            Giảm giá:
                        </div>
                        <div class="col">
                            @((Model.Discount != null ? Model.Discount.PercentValue : 0) + " %")
                        </div>
                    </div>

                    <div class="row">
                        <div class="col fw-bold">
                            Số sản phẩm:
                        </div>
                        <div class="col">
                            @ViewBag.ListCart.Count
                        </div>
                    </div>
                    <div class="table-group-divider"></div>
                    <div class="row mt-4">
                        <div class="col fw-bold">
                            Thanh toán:
                        </div>
                        <div class="col fw-bold">
                            @Model.currencyTotalPay()
                        </div>
                    </div>
                </div>
                <div style="margin-top:20px ; margin-bottom:30px;">
                    <button type="button" class="btn btn-outline-secondary rounded-pill" onclick="actionCancelBill()">Hủy</button>
                    <button type="button" class="btn btn-danger rounded-pill" onclick="navigateToPayment()">Thanh toán</button>
                </div>
            </div>
        </div>
    </div>
</div>*@




@section Scripts  {
    <script>
        // quantity buttons
        document.addEventListener('DOMContentLoaded', function () {
            const minusBtns = document.querySelectorAll('.cart_minus-btn'); // Tất cả nút giảm
            const plusBtns = document.querySelectorAll('.cart_plus-btn'); // Tất cả nút tăng
            const quantityInputs = document.querySelectorAll('.cart_quantity-input'); // Tất cả input số lượng

            // Xử lý cho nút giảm
            minusBtns.forEach(function (btn) {
                btn.addEventListener('click', function () {
                    let parent = this.closest('.cart_content_body');
                    let quantityInput = parent.querySelector('.cart_quantity-input');
                    let currentValue = parseInt(quantityInput.value);
                    if (currentValue > 1) {
                        quantityInput.value = currentValue - 1;
                    }
                });
            });

            // Xử lý cho nút tăng
            plusBtns.forEach(function (btn) {
                btn.addEventListener('click', function () {
                    let parent = this.closest('.cart_content_body');
                    let quantityInput = parent.querySelector('.cart_quantity-input');
                    let currentValue = parseInt(quantityInput.value);
                    quantityInput.value = currentValue + 1;
                });
            });

            // Xử lý khi người dùng rời khỏi input
            quantityInputs.forEach(function (input) {
                input.addEventListener('blur', function () {
                    if (input.value === '') {
                        input.value = 1;
                    }
                });
            });
        });
        // check box
        document.addEventListener('DOMContentLoaded', function () {
            const headerCheckboxes = document.querySelectorAll('.cart_content_header .cart_content_input'); // Tất cả các checkbox trong header
            const contentCheckboxes = document.querySelectorAll('.cart_content_body .cart_content_input'); // Tất cả các checkbox trong body

            // Xử lý cho nút checkbox trong header
            headerCheckboxes.forEach(function (checkbox) {
                checkbox.addEventListener('change', function () {
                    // Lấy trạng thái checked của checkbox
                    const isChecked = this.checked;

                    // Duyệt qua tất cả các checkbox trong body và thiết lập trạng thái checked của chúng
                    contentCheckboxes.forEach(function (contentCheckbox) {
                        contentCheckbox.checked = isChecked;
                    });
                });
            });
        });

        function navigateToPayment() {
            location.href = "/ConsumerProduct/Payment"
        }


        function createFormPost(data) {
            var form = document.createElement("form");
            form.action = "/ConsumerProduct/ConsumerCart"
            form.method = "POST";
            for (var key in data) {
                if (data.hasOwnProperty(key)) {
                    var input = document.createElement("input");
                    input.type = "hidden";
                    input.name = key;
                    input.value = data[key];
                    form.appendChild(input);
                }
            }
            document.body.appendChild(form);
            form.submit();
        }

        function updateListCart(idProduct, quantity) {
            $.ajax({
                url: "/ConsumerProduct/AddProductToCart",
                type: "POST",
                data: {
                    productId: idProduct,
                    quantity: quantity,
                },
                success: function (result) {
                    console.log(result);
                    if (result.status) {
                        console.log("Buy Success.");
                        toastr.options.closeButton = true;
                        toastr.success("Giỏ hàng", "Thêm sản phẩm thành công!");
                        location.reload();
                    } else {
                        console.log("Buy Failed.");
                        window.location.href = result.url;
                        toastr.options.closeButton = true;
                    }
                },
                error: function () {
                    console.error("AJAX request failed");
                },
            });
        }



        function actionPayBill() {
            $.ajax({
                url: "/ConsumerProduct/PayBill",
                type: "POST",
                data: {},
                success: function (result) {
                    if (result.status) {
                        toastr.options.closeButton = true;
                        toastr.success(result.message, "Giỏ hàng");
                        setTimeout(function () {
                            location.reload();
                        }, 500);
                    } else {
                        toastr.options.closeButton = true;
                        toastr.warning(result.message, "Giỏ hàng");
                    }
                },
                error: function () {
                    console.error("AJAX request failed");
                },
            });
        }
        function actionCancelBill() {
            $.ajax({
                url: "/ConsumerProduct/CancelBill",
                type: "POST",
                data: {},
                success: function (result) {
                    console.log(result);
                    if (result.status) {
                        toastr.options.closeButton = true;
                        toastr.success(result.message, "Thanh toán");
                        location.reload();
                    } else {
                        //window.location.href = result.url;
                        toastr.options.closeButton = true;
                        toastr.warning(result.message, "Thanh toán");
                    }
                },
                error: function () {
                    console.error("AJAX request failed");
                },
            });
        }


        function deleteProduct(idProduct) {
            $.ajax({
                url: "/ConsumerProduct/RemoveFromCart",
                type: "POST",
                data: {
                    productId: idProduct
                },
                success: function (result) {
                    console.log(result);
                    if (result.status) {
                        toastr.options.closeButton = true;
                        toastr.success("Giỏ hàng", "Cập nhật giỏ hàng thành công!");
                        location.reload();
                    } else {
                        window.location.href = result.url;
                        toastr.options.closeButton = true;
                        toastr.warning("Giỏ hàng", "Cập nhật giỏ hàng thất bại!");
                    }
                },
                error: function (error) {
                    console.error("AJAX request failed", error);
                },
            });
        }

        initializeHighLightProduct()
        function initializeHighLightProduct() {
            $.ajax({
                url: "/Common/GetProduct",
                type: "POST",
                data: {},
                success: function (result) {
                    if (result.status) {
                        showHighLightProduct(result.data)
                    } else {

                    }
                },
                error: function () {
                    console.error("AJAX request failed");
                },
            });
        }
        function showHighLightProduct(products) {
            var productDetailId = document.getElementById('product_highlight_list');

            productDetailId.innerHTML = "";

            products.forEach((item) => {
                var htmlContent = `
                      <div class="col l-3">
                          <div class="best_seller_product-card" data-item-id="${item.id_product}">
                              <div class="best_seller_product-image">
                                  <img src="${item.image_url}" alt="Gọng kính" style="height:150px">
                              </div>
                              <div class="best_seller_product-details">
                                  <div class="best_seller_product-name">${item.name_product}</div>
                                  <div class="best_seller_product-pricing">
                                      <div class="best_seller_product-discount">
                                         Phân loại: <span class="best_seller_product-discount-price">${item.type_product}</span>
                                      </div>
                                  </div>
                                  <button class="best_seller_product-buy-btn">
                                      <div class="best_seller_product-price">${item.price}</div>
                                      <i class="fas fa-chevron-right"></i>
                                  </button>
                              </div>
                          </div>
                      </div>
                    `;
                productDetailId.insertAdjacentHTML('beforeend', htmlContent);
            });

            var productCards = document.querySelectorAll(".best_seller_product-card");

            productCards.forEach(function (card) {
                card.addEventListener("click", function (event) {
                    var target = event.target;
                    var itemId = card.dataset.itemId;

                    if (target.closest(".best_seller_product-buy-btn")) {
                        updateListCart(itemId, 1)
                        console.log("Buy button clicked for item with ID: " + itemId);
                    } else {
                        var itemId = card.dataset.itemId;
                        window.location.href = "/ConsumerProduct/DetailProduct?product_id=" + itemId;
                    }
                });
            });

        }
        //hàm xử lý sự kiện xóa
        function deleteSelectedProducts() {
            const selectedCheckboxes = document.querySelectorAll('.cart_content_input:checked');
            if (selectedCheckboxes.length === 0) {
                toastr.warning("Vui lòng chọn ít nhất một sản phẩm để xóa.");
                return;
            }

            const deletePromises = Array.from(selectedCheckboxes).map(checkbox => {
                const productId = checkbox.getAttribute('data-product-id');
                return new Promise((resolve, reject) => {
                    $.ajax({
                        url: "/ConsumerProduct/RemoveFromCart",
                        type: "POST",
                        data: {
                            productId: productId
                        },
                        success: function (result) {
                            console.log("Success response:", result);
                            if (result.status) {
                                resolve(result);
                            } else {
                                reject(new Error("Failed to delete product with ID: " + productId + ". Server responded with: " + JSON.stringify(result)));
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX error response:", status, error);
                            reject(new Error("AJAX Error: " + error + " for product ID: " + productId));
                        },
                    });
                });
            });

            Promise.all(deletePromises)
                .then(results => {
                    toastr.success("Tất cả các sản phẩm đã chọn đã được xóa thành công!");
                    location.reload(); // Tải lại trang để cập nhật giao diện
                })
                .catch(error => {
                    toastr.error("Không thể xóa một hoặc nhiều sản phẩm. Vui lòng thử lại.");
                    console.error("Error deleting products:", error.message);
                });
        }


    </script>
}
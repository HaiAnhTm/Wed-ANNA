//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNet_E_Commerce_Glasses_Web.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Product
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Product()
        {
            this.RateProducts = new HashSet<RateProduct>();
        }
        public Product(Product product)
        {
            this.IdProduct = product.IdProduct;
            this.IdTypeProduct = product.IdTypeProduct;
            this.NameProduct = product.NameProduct;
            this.Price = product.Price;
            this.Image = product.Image;
            this.Discount = product.Discount;
            this.Quantity = product.Quantity;
            this.TypeProduct = product.TypeProduct;
            this.RateProducts = new HashSet<RateProduct>();
            this.TypeProductSale = product.TypeProductSale;
        }
        public int IdProduct { get; set; }
        public Nullable<int> IdTypeProduct { get; set; }
        public string NameProduct { get; set; }
        public Nullable<long> Price { get; set; }
        public string Description { get; set; }
        public string Image { get; set; }
        public Nullable<double> Discount { get; set; }
        public Nullable<long> Quantity { get; set; }
        public Nullable<int> IdTypeSale { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RateProduct> RateProducts { get; set; }
        public virtual TypeProductSale TypeProductSale { get; set; }
        public virtual TypeProduct TypeProduct { get; set; }
    }
}
